console.log
console= oggetto
.log()= metodo
.length = proprietà. no parentesi
Console oggetto innestato

Linguaggio Case Sensitive

Array contenitore di elementi simili tra di loro

In js gli array possono essere misti, ma non viene mai usato.

//// FOR /////

   let colori = ["rosso", "blu","giallo", "verde"];

        for(let i = 0; i< colori.lenght; i++){ 
        }


///// FOR OFF
        for (let colore of colori) {  //for of
            console.log(colore);
        }


///// FOR IN
        for (let indice in colori) {
            console.log(colori[indice]);
            }
////// FOR EACH        

    console.log("-----------FOT AL CONTRARIO-----");
    for(let i= colori.length -1; i>0; i--){
        console.log(colori[i]);
    }

///// IF /////
if(condizione){corpo}

== verifica contenuto di una variabile
=== verifica il contenuto e il tipo di una variabile

var numero1 = 10;
var numero2 = "10";

let confronto1 = (numero1 == numero2); // -> true
let confronto2 = (numero1 === numero2); // -> false


//&& AND logico e contemporaneamente
// || OR logico oppure


/////////////////

FUNZIONI

///////////////////
JavaScript programmazione funzionale.
Le funzioni servono a racchiudere parti di script.

function sayHello()
function cosa stiamo facendo
sayHello nome della funzione
()firma del metodo

functiongetArea(altezza, larghezza){
return altezza*larghezza;
}

richiamare getArea(4,5);

chiamiamo metodi le funzioni legate a degli oggetti
funzioni sono le altre

ESPRESSIONE FUNZIONALE= non puo essere richiamata prima che l'interprete l'abbia raggiunta
Dichiarare
let area = function(altezza, larghezza){
return altezza*larghezza:
}
richiamare
let size = area(5,4);


SCOPE visibilità
quando dichiariamo una var al di fuori di una funzione è una variabile globale (maggiore utilizzo di memoria, livello globale)
quando dichiariamo una var all'interno di una funzione è leggibile solo all'interno è una variabile Locale (minore utilizzo di memoria)

è preferibile usare una o l'altra? no, dipende dall'utilizzo.

il richiamo della funzione è totalmente indipendente dalla sua dichiarazione. posso richiamare prima di dichiarare.

tutte le volte che la funzione restituisce qualcosa bisogna intercettarla.
le funzioni sono tutte globali tranne le funzioni locali.

funzioni parametriche cioe funzioni con firma piena, funzioni con parametri definiti

fuction di callback
calcolaVolume(calcolaArea(4, 5), 75);

-------------------------
19/06/2023
ogni funzione guarda solo se stessa

addEventListener solo su html object monto un ascoltatore di eventi.

OGGETTI BUILT IN

BOM Browser Object Model
questo modello contiene oggetti che rappresentano la finestra o la scheda del browser.

Window(scheda del browser) -> document (pagina web) -> history (cronologia) -> location(url) -> navigator(info sul browser -> screen(info su display del dispositivo)

DOM Document object model
Il dom crea un modello della pagina web corrente utilizzando gli oggetti. l'oggetto più elevato della gerarchia è document

OGGETTI GLOBALI:
STRING
NUMBER
MATH

let stringa1 = "ciao come stai? Io ho caldo!";

lo split splitta una stringa in base ad un pattern e la fa diventare una stringa
let split = stringa1.split(" ");
console.log(split);
0: "ciao"
1: "come"
2: "stai?"
3: "Io"
4: "ho"
5: "caldo!"

join è un metodo per array
let join = split.join("_");
console.log(join);
ciao_come_stai?_Io_ho_caldo!


per le date si importano delle librerie

metodi: funzioni strettamente legati agli oggetti
un oggetto è un modello di entita presente nel mondo reale, in un oggetto variabili e funzioni assumono nomi nuovi

CREARE OGGETTO
1)NOTAZIONE LETTERALE
let Studente = {  --> le parentesi graffe identificano l'oggetto
nome: 'Pippo',
cognome:'Ippo'
voto: 30,

superaEsame: function(){
alert('esame superato');
}
}

la funzione è dentro l'oggetto. Senza avere classe

2) NOTAZIONE A COSTRUTTORE

function Studente(nome, cognome, voto) {
this.nome = nome;
this.cognome


this.superaEsame=function
}
la funzione costruttore crea istanze dell'oggetto. la parola chiave new se
le funzioni dichiarata dentro un oggetto è detta METODO


serie: estrarre uno da 10 numeri. 5 numeri
numeri 1 a 90 con estrazione

----------------------------------------------
21/06/2023
dichiarazione con funzione costruttore
lettera maiuscola -> metodo costuttore
lettera minuscola -> funzione
----------------------------------------------

23/06/2023

funzione anonima function(){ richiammo tutte le funzioni che voglio far partire insieme}


///DOM
DOM document object model
è un insieme di regole distinto, implementato dai principali browser. si occupa di:
creare un modello della pagina html utilizzando un albero del DOM
accedere al contenuto della pagina html utilizzando metodi e proprietà degli oggetti del modello

document -> html ->head -> title ->text
		-> body -> h1 -> text
			-> <a> href -> link text


document.querySelector('cssSelector') = recupera solo la prima occorrenza che sia id o classe
document.querySelectorAll('cssSelector')

nodelist tipo del dato

-------------------------------------------------------------------------
costruttore parte prima dell'ngOnInit 
component ha un ciclo vita

il costruttore è uguale a quello in java. ma non è obbligatorio.



